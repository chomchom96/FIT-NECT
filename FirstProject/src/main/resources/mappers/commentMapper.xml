<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ssafy.board.model.dao.CommentDao">
	<resultMap type="Comment" id="commentMap">
		<result column="comment_seq" property="commentSeq"/>
		<result column="board_id" property="boardId"/>
		<result column="user_id" property="userId"/>
		<result column="comment" property="comment"/>
		<result column="created_at" property="createdAt"/>
	</resultMap>
	
	<select id="selectAll" resultMap="commentMap" resultType="Comment">
		SELECT *  
		FROM comment;
	</select>

	<select id="search" resultMap="commentMap" resultType="Comment" parameterType="SearchCondition">
    	SELECT *
    	FROM comment
    <if test="key != 'none'">
        WHERE
        <choose>
            <when test="key == 'boardId'">
                board_id
            </when>
            <when test="key == 'userId'">
                user_id
            </when>
            <when test="key == 'comment'">
               	comment
            </when>
            <when test="key == 'createdAt'">
                created_at
            </when>
            <otherwise>
                ${key}
            </otherwise>
        </choose>
        LIKE concat('%', #{word}, '%');
    	</if>
	</select>
	
	<!-- commentSeq에 해당하는 코멘트 하나 가져오기 -->
	<select id="selectOne" resultMap="commentMap" parameterType="Comment">
        SELECT *
        FROM comment
        WHERE comment_seq = #{commentSeq};
    </select>

	<!-- 한 게시글에 해당하는 코멘트 모두 가져오기 -->
	<select id="commentByBoard" resultMap="commentMap" parameterType="Comment">
        SELECT *
        FROM comment
        WHERE board_id = #{boardId};
    </select>
	
	
	<!-- 한 명의 유저의 코멘트 모두 가져오기 -->
	<select id="commentByUser" resultMap="commentMap" parameterType="Comment">
        SELECT *
        FROM comment
        WHERE user_id = #{userId};
    </select>
    

	<insert id="insertComment" parameterType="Comment" useGeneratedKeys="true">
		INSERT INTO comment (comment_seq, board_id, user_id, comment)
		VALUES (#{commentSeq}, #{boardId}, #{userId}, #{comment});
	</insert>
	
	<delete id="deleteComment" parameterType="int">
		DELETE FROM comment
		WHERE comment_seq = #{commentSeq};
	</delete>
	
	<update id="updateComment" parameterType="Comment">
		UPDATE comment
		SET comment = #{comment}
		WHERE comment_seq = #{commentSeq};
	</update>
	

</mapper>